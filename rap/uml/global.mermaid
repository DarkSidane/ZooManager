classDiagram
    %% Classes MVC
    class Main {
        +main(String[] args)
    }

    class ZooController {
        -Zoo zoo
        -ConsoleView view
        -boolean running
        -User currentUser
        +start()
        -handleLogin()
        -processMainMenuChoice(String)
        -handleAnimalMenu()
        -handleEnclosMenu()
        -handleEmployeeMenu()
    }

    class ConsoleView {
        -Scanner scanner
        +displayMainMenu(Role)
        +displayLoginMenu()
        +displayMessage(String)
        +displayError(String)
        +getUserInput()
    }

    %% Classes Model - Core
    class Zoo {
        -List~Enclos~ enclos
        -List~Employee~ employees
        -Budget budget
        -String name
        +addEnclos(Enclos)
        +addEmployee(Employee)
        +updateState()
    }

    %% Classes Model - Animal
    class Animal {
        <<abstract>>
        #String name
        #double health
        #double hunger
        #Species species
        +feed()
        +heal()
        +makeSound()*
        +updateState()
    }

    class Mammifere {
        <<abstract>>
        #boolean isNocturnal
        #int gestationPeriod
        +reproduce()*
    }

    class Oiseau {
        <<abstract>>
        #double wingspan
        #boolean canFly
        +fly()
    }

    class Lion {
        -int prideSize
        -boolean isAlpha
        +hunt()
        +makeSound()
    }

    class Zebre {
        -String stripePattern
        -int herdSize
        +gallop()
        +makeSound()
    }

    class Pelican {
        -double beakSize
        -double pouchCapacity
        +fish()
        +makeSound()
    }

    class FlamantRose {
        -String plumageColor
        -int balanceTime
        +filter()
        +makeSound()
    }

    class Species {
        <<enumeration>>
        LION
        ZEBRE
        PELICAN
        FLAMANT_ROSE
    }

    %% Classes Model - Employee
    class Employee {
        <<abstract>>
        #String name
        #double salary
        +work()*
        +getName()
        +getSalary()
    }

    class Soigneur {
        -List~Species~ specialties
        +addSpecialty(Species)
        +healAnimal(Animal)
        +feedAnimal(Animal)
    }

    class AgentMenage {
        -List~Enclos~ assignedEnclos
        +assignEnclos(Enclos)
        +cleanEnclos(Enclos)
    }

    %% Classes Model - Enclos & Financial
    class Enclos {
        -String name
        -int capacity
        -List~Animal~ animals
        -double cleanliness
        +addAnimal(Animal)
        +clean()
        +updateState()
    }

    class Budget {
        -double balance
        -List~Transaction~ transactions
        +addTransaction(Transaction)
        +generateReport()
    }

    class Transaction {
        -double amount
        -String description
        -LocalDateTime date
        -TransactionType type
    }

    class TransactionType {
        <<enumeration>>
        INCOME
        EXPENSE
    }

    %% Classes Model - User
    class User {
        -Employee employee
        -Role role
        +getEmployee()
        +getRole()
    }

    class Role {
        <<enumeration>>
        DIRECTEUR
        SOIGNEUR
        AGENT_MENAGE
    }

    %% Relations MVC
    Main --> ZooController : creates
    Main --> Zoo : creates
    Main --> ConsoleView : creates
    ZooController --> Zoo : controls
    ZooController --> ConsoleView : uses
    ZooController --> User : manages

    %% Relations Model
    Zoo *-- "*" Enclos
    Zoo *-- "*" Employee
    Zoo --> "1" Budget
    Enclos *-- "*" Animal

    %% Héritage Animal
    Animal <|-- Mammifere
    Animal <|-- Oiseau
    Mammifere <|-- Lion
    Mammifere <|-- Zebre
    Oiseau <|-- Pelican
    Oiseau <|-- FlamantRose
    Animal --> Species

    %% Héritage Employee
    Employee <|-- Soigneur
    Employee <|-- AgentMenage
    Soigneur --> Species
    AgentMenage --> Enclos

    %% Relations Financial
    Budget *-- "*" Transaction
    Transaction --> TransactionType

    %% Relations User
    User --> Employee
    User --> Role
