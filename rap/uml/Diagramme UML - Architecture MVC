classDiagram
    class Main {
        +main(String[] args)
    }

    class ZooController {
        -Zoo zoo
        -ConsoleView view
        -boolean running
        -User currentUser
        +start()
        -handleLogin()
        -handleEmployeeLogin()
        -processMainMenuChoice()
        -processDirecteurChoice()
        -processSoigneurChoice()
        -processAgentMenageChoice()
        -handleEnclosMenu()
        -handleAnimalMenu()
        -handleEmployeeMenu()
    }

    class ConsoleView {
        -Scanner scanner
        +displayMainMenu(Role)
        +displayLoginMenu()
        +displayEmployeeLoginMenu(List~Employee~)
        +displayEnclosMenu()
        +displayAnimalMenu()
        +displayEmployeeMenu()
        +displayMessage(String)
        +displayError(String)
        +displayZooStatus(Zoo)
        +displayEnclosStatus(Enclos)
        +displayAllEnclos(Zoo)
        +displayAllEmployees(Zoo)
    }

    class Zoo {
        -List~Enclos~ enclos
        -List~Employee~ employees
        -Budget budget
        -String name
        +addEnclos(Enclos)
        +addEmployee(Employee)
        +updateState()
    }

    Main --> ZooController : creates
    Main --> Zoo : creates
    Main --> ConsoleView : creates
    ZooController --> Zoo : controls
    ZooController --> ConsoleView : uses
    ZooController --> User : manages

    note for ZooController "Gère la logique de l'application\net coordonne Model et View"
    note for ConsoleView "Gère l'interface utilisateur\nen ligne de commande"
    note for Zoo "Modèle principal contenant\ntoutes les données du zoo"
