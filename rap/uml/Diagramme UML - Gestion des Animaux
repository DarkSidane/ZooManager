classDiagram
    class Animal {
        <<abstract>>
        #String name
        #double health
        #double hunger
        #Species species
        +feed()
        +heal()
        +makeSound()*
        +updateState()
        +getStatus()
        +getHealth()
        +getHunger()
        +getName()
        +getSpecies()
    }

    class Mammifere {
        <<abstract>>
        #boolean isNocturnal
        #int gestationPeriod
        +reproduce()*
    }

    class Oiseau {
        <<abstract>>
        #double wingspan
        #boolean canFly
        +fly()
    }

    class Lion {
        -int prideSize
        -boolean isAlpha
        +hunt()
        +makeSound()
        +reproduce()
        +getStatus()
    }

    class Zebre {
        -String stripePattern
        -int herdSize
        +gallop()
        +makeSound()
        +reproduce()
    }

    class Pelican {
        -double beakSize
        -double pouchCapacity
        +fish()
        +makeSound()
    }

    class FlamantRose {
        -String plumageColor
        -int balanceTime
        +filter()
        +makeSound()
        +standOneLeg()
    }

    class Species {
        <<enumeration>>
        LION
        ZEBRE
        PELICAN
        FLAMANT_ROSE
        -String displayName
        +toString()
    }

    Animal <|-- Mammifere : extends
    Animal <|-- Oiseau : extends
    Mammifere <|-- Lion : extends
    Mammifere <|-- Zebre : extends
    Oiseau <|-- Pelican : extends
    Oiseau <|-- FlamantRose : extends
    Animal --> Species : has

    note for Animal "Classe abstraite de base pour tous les animaux\nGère l'état de santé et de faim"
    note for Mammifere "Définit les comportements spécifiques\naux mammifères comme la reproduction"
    note for Oiseau "Ajoute les capacités de vol\net l'envergure des ailes"
    note for Species "Enumération des espèces\ndisponibles dans le zoo"
